@import "src/assets/css/global";

@button-types: default, danger, success, primary, warning;
@button-borderTypes: dashed, solid;

.container {
  position: relative;
  color: black;
  padding: 0 16px;
  font-size: @base-fontSize;
  background-color: @noddle-main-color;
  min-width: 60px;
  text-align: center;
  height: 32px;
  display: flex;
  justify-content: center;
  align-items: center;
  width: max-content;
  transition: .3s linear;
  border-radius: @base-border-radius;
  user-select: none;
}

.container:not(.disabled) {
  cursor: pointer;
}

.container:not([data-bordertype=text]):hover {
  filter: @hover-filter;
}

@default: @color-default;
@danger: @color-danger;
@success: @color-success;
@primary: @noddle-main-color;
@warning: @color-warning;

@text: transparent;


each(@button-types, {
  .container[data-buttontype=@{value}] {
    background-color: transparent;
    color: @@value;
    border-color: @@value;
  }
  .container[data-buttontype=@{value}][data-bordertype=default] {
    background-color: @@value;
    border-color: @@value;
    color: white;
  }
})

each(@button-types, {
  .click[data-buttontype=@{value}][data-bordertype=solid], .click[data-buttontype=@{value}][data-bordertype=default], .click[data-buttontype=@{value}][data-bordertype=dashed] {
    animation: .8s ease default;
  }
})

each(@button-types, {
  .click[data-buttontype=@{value}][data-bordertype=solid][data-clickeffect=currentColor], .click[data-buttontype=@{value}][data-bordertype=default][data-clickeffect=currentColor], .click[data-buttontype=@{value}][data-bordertype=dashed][data-clickeffect=currentColor] {
    animation: .8s ease @value;
  }
})

.container[data-buttontype=default]:hover {
  filter: brightness(1.05);
}

.container[data-buttontype=default] {
  color: black !important;
}

.container[data-bordertype=solid][data-buttontype=default]:not(.disabled):hover, .container[data-bordertype=dashed][data-buttontype=default]:not(.disabled):hover{
  color: @noddle-main-color!important;
  border-color: currentColor;
}

.container[data-bordertype=solid], .container[data-bordertype=dashed], .container[data-backgroundstyle=none], .container[data-backgroundstyle=border] {
  padding: 15px!important;
}

each(@button-borderTypes, {
  .container[data-bordertype=@{value}] {
    background-color: transparent !important;
    border-width: 1px;
    border-style: @value;
  }
})

.container[data-bordertype=text]:not([data-backgroundstyle=default]) {
  border: 1px solid transparent;
}

.container[data-bordertype=text][data-backgroundstyle=default]:not(.disabled):hover {
  background-color: @base-inactive-background-color;
  filter: brightness(1.1);
}

.container[data-bordertype=text][data-backgroundstyle=border]:not(.disabled):hover {
  border-color: @base-inactive-background-color;
}

.click[data-bordertype=text]:not([data-backgroundstyle=none]) {
  animation: .8s ease default;
}


@keyframes primary {
  0% {
    outline: 0 solid @primary;
  }
  100% {
    outline: 5px solid transparent;
  }
}

@keyframes danger {
  0% {
    outline: 0 solid @danger;
  }
  100% {
    outline: 5px solid transparent;
  }
}

@keyframes warning {
  0% {
    outline: 0 solid @warning;
  }
  100% {
    outline: 5px solid transparent;
  }
}

@keyframes default {
  0% {
    outline: 0 solid rgba(0, 0, 0, .15);
  }
  100% {
    outline: 5px solid transparent;
  }
}

@keyframes success {
  0% {
    outline: 0 solid @success;
  }
  100% {
    outline: 5px solid transparent;
  }
}

.disabled::after {
  cursor: not-allowed;
  content: '';
  width: 100%;
  height: 100%;
  position: absolute;
  background-color: rgba(255,255,255,.6);
  border-radius: @base-border-radius;
}

.disabled {
  filter: none!important;
}